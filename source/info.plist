<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>COM.HAAKONSTORM.TRANSFRED</string>
	<key>category</key>
	<string>haakonstorm</string>
	<key>connections</key>
	<dict>
		<key>0B25B88F-4243-4E75-983B-36D1C96F4E94</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>C56A25FC-B243-46D2-9291-A58F3A993665</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Haakon Storm Heen</string>
	<key>description</key>
	<string>soimort/translate-shell in Alfred</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Transfred</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>127</integer>
				<key>keyword</key>
				<string>trans</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>translating...</string>
				<key>script</key>
				<string>brewdir=${brew_prefix}/bin
PATH=$PATH:$brewdir

target_languages=$languages

awk=$brewdir/gawk
trans=$brewdir/trans

if [[ ${#} -eq 0 ]]; then
    echo "&lt;?xml version='1.0'?&gt;&lt;items&gt;
    &lt;item valid='no'&gt;
    &lt;title&gt;Transfred: translate-shell Workflow for Alfred.&lt;/title&gt;
    &lt;subtitle&gt;Start typing to translate.&lt;/subtitle&gt;
    &lt;/item&gt;
  &lt;/items&gt;"
fi

awkscript='{
    print "  &lt;item arg='\''" $0 "'\'' " "valid='\''" "yes" "'\''&gt;"
    print "    &lt;title&gt;" $0 "&lt;/title&gt;"
    print "  &lt;/item&gt;"
}
'

echo "&lt;?xml version='1.0'?&gt;&lt;items&gt;"
$trans --engine google --no-init --brief --join-sentence --source auto --target $target_languages -- $* | $awk "$awkscript"
echo "&lt;/items&gt;"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Translate-shell for Alfred</string>
				<key>title</key>
				<string>Translate</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>0B25B88F-4243-4E75-983B-36D1C96F4E94</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist='https://raw.githubusercontent.com/haakonstorm/transfred/main/source/info.plist'
readonly workflow_url='https://raw.githubusercontent.com/haakonstorm/transfred/main/Transfred.alfredworkflow'
readonly download_type='direct'
readonly frequency_check='0'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  local -r terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>C56A25FC-B243-46D2-9291-A58F3A993665</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Simple Alfred interface to translate-shell.

Translate from any language, to multiple languages at the same time.

Great when you are learning more than one new language.

With sensible defaults for norwegians that happen to like tiếng việt, latin, english, deutsch, español and français.

1. Install dependencies

brew install gawk 
brew install translate-shell

2. Set up brew_prefix

On Intel: /usr/local
On ARM: /opt/homebrew

3. Set languages

The format is "en+no+vi+la+es+fr+de". List country codes with:
trans -T

4. Problems or suggestions

Please use the issue tracker at:
https://github.com/haakonstorm/transfred

Translate-shell by Mort Yao
https://github.com/soimort/translate-shell</string>
	<key>uidata</key>
	<dict>
		<key>0B25B88F-4243-4E75-983B-36D1C96F4E94</key>
		<dict>
			<key>note</key>
			<string>Transfred is a simple interface for Alfred to
translate-shell by Mort Yao &amp; others

https://github.com/soimort/translate-shell

Alfred workflow by haakonstorm</string>
			<key>xpos</key>
			<integer>45</integer>
			<key>ypos</key>
			<integer>65</integer>
		</dict>
		<key>C56A25FC-B243-46D2-9291-A58F3A993665</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>335</integer>
			<key>ypos</key>
			<integer>75</integer>
		</dict>
	</dict>
	<key>variables</key>
	<dict>
		<key>brew_prefix</key>
		<string>/opt/homebrew</string>
		<key>languages</key>
		<string>en+no+vi+la+es+fr+de</string>
	</dict>
	<key>version</key>
	<string>0.5.1</string>
	<key>webaddress</key>
	<string>https://github.com/haakonstorm/transfred</string>
</dict>
</plist>
